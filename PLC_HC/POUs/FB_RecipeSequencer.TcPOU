<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_RecipeSequencer" Id="{eaa1ede0-1851-426e-9c35-61099dc6c976}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_RecipeSequencer
VAR_INPUT
	nRcpIndex	: INT;
END_VAR

VAR
	i 			: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Write a Controller MFC / EPC *)
FOR i:= 1 TO GVL_IO.nNumMFC DO
	IF GVL_IO.aMaxValueController[i] <> 0 THEN
		GVL_IO.aController[i].nState := 10;
		GVL_IO.aController[i].nRampTime := RCP.aRecipe[nRcpIndex].iRecipe[2]; //Current Recipe Step Ramp Time
		GVL_IO.aController[i].rTargetValue := RCP.aRecipe[nRcpIndex].rRecipe[i] / GVL_IO.aMaxValueController[i] * GVL_IO.EL3064MaxValueH; //Input Set Value
		GVL_IO.aAnalogOutputIO[i] := LREAL_TO_INT(GVL_IO.aController[i].rControlValue);
		
		GVL_IO.aController_PV[i] := GVL_IO.aAnalogInputIO[i] / (GVL_IO.EL3064MaxValueH * GVL_IO.aMaxValueController[i]);
		GVL_IO.aController_CV[i] := LREAL_TO_REAL((GVL_IO.aController[i].rControlValue / GVL_IO.EL3064MaxValueH)*GVL_IO.aMaxValueController[i]);
		GVL_IO.aController[i]();	
	END_IF
END_FOR

(* Solenoid Valve Mapping *)
GVL_IO.OutputSolValve.0 := RCP.aRecipe[nRcpIndex].dRecipe.0; //V01 B/G N2 In
GVL_IO.OutputSolValve.1 := RCP.aRecipe[nRcpIndex].dRecipe.1; //V02 Ga HCl In 
GVL_IO.OutputSolValve.2 := RCP.aRecipe[nRcpIndex].dRecipe.2; //V3 Ga N2 In 
GVL_IO.OutputSolValve.3 := RCP.aRecipe[nRcpIndex].dRecipe.3; //V4 NH3 NH3 In
GVL_IO.OutputSolValve.4 := RCP.aRecipe[nRcpIndex].dRecipe.4; //V5 NH3 N2 In
GVL_IO.OutputSolValve.5 := RCP.aRecipe[nRcpIndex].dRecipe.5; //V6 Al HCl In
GVL_IO.OutputSolValve.6 := RCP.aRecipe[nRcpIndex].dRecipe.6; //V7 Al N2 In
GVL_IO.OutputSolValve.7 := RCP.aRecipe[nRcpIndex].dRecipe.7; //V8 Etching HCl In
GVL_IO.OutputSolValve.8 := RCP.aRecipe[nRcpIndex].dRecipe.8; //V9 Etching N2 In
GVL_IO.OutputSolValve.9 := RCP.aRecipe[nRcpIndex].dRecipe.9; //V10 H2O2 HCl In
GVL_IO.OutputSolValve.10 := RCP.aRecipe[nRcpIndex].dRecipe.10; //V11 H2/O2 N2 In
GVL_IO.OutputSolValve.11 := RCP.aRecipe[nRcpIndex].dRecipe.11; //V12 B/F N2 In 
GVL_IO.OutputSolValve.12 := RCP.aRecipe[nRcpIndex].dRecipe.12; //V13
GVL_IO.OutputSolValve.13 := RCP.aRecipe[nRcpIndex].dRecipe.13; //V14 B/G Out
GVL_IO.OutputSolValve.14 := RCP.aRecipe[nRcpIndex].dRecipe.14; //V15 Ga Out
GVL_IO.OutputSolValve.15 := RCP.aRecipe[nRcpIndex].dRecipe.15; //V16 Nh3 Out
GVL_IO.OutputSolValve.16 := RCP.aRecipe[nRcpIndex].dRecipe.16; //V17 Al Out
GVL_IO.OutputSolValve.17 := RCP.aRecipe[nRcpIndex].dRecipe.17; //V18 Etching Out
GVL_IO.OutputSolValve.18 := RCP.aRecipe[nRcpIndex].dRecipe.18; //V19 H2/O2 Out
GVL_IO.OutputSolValve.19 := RCP.aRecipe[nRcpIndex].dRecipe.19; //V20 F/F Out]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>